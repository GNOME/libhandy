stages:
  - build

before_script:
  - apt-get -y update
  - apt-get -y install build-essential libgtk-3-doc lcov
  - apt-get -y build-dep .

.tags: &tags
  tags:
    - librem5

build-debian-gcc:
  image: debian:buster
  <<: *tags
  stage: build
  script:
    - export LC_ALL=C.UTF-8
    - meson . _build -Dgtk_doc=true -Db_coverage=true --werror
    - ninja -C _build
    - ninja -C _build meson-libhandy-doc 2>&1 | tee _build/doc/buildlog
    - if grep -qs 'warning' _build/doc/buildlog; then exit 1; fi
    - xvfb-run -s -noreset ninja -C _build test
    - ninja -C _build coverage
  coverage: '/^\s+lines\.+:\s+([\d.]+\%)\s+/'
  artifacts:
    when: always
    paths:
      - _build

build-debian-gcc-static:
  image: debian:buster
  <<: *tags
  stage: build
  script:
    - export LC_ALL=C.UTF-8
    - meson . _build -Dintrospection=disabled -Dstatic=true -Dgtk_doc=false --werror
    - ninja -C _build
    - test -f _build/src/libhandy-0.0.a
    - xvfb-run -s -noreset ninja -C _build test

build-debian-clang:
  image: debian:buster
  before_script:
    - apt-get -y update
    - apt-get -y install build-essential clang-tools
    - apt-get -y build-dep .
  <<: *tags
  stage: build
  script:
    - export LC_ALL=C.UTF-8
    - meson . _build
    # With meson 0.49 we can do
    # SCANBUILD="scan-build --status-bugs" ninja scan-build
    # https://github.com/mesonbuild/meson/commit/1e7aea65e68a43b0319a4a28908daddfec621548
    - ninja -C _build scan-build
  artifacts:
    when: always
    paths:
      - _build/meson-logs/scanbuild

build-fedora-gcc:
  image: fedora:29
  <<: *tags
  stage: build
  before_script:
    - dnf -y update
    - dnf -y install @development-tools redhat-rpm-config dnf-plugins-core
    - dnf -y builddep data/packaging/rpm/libhandy.spec
  script:
    - export LC_ALL=C.UTF-8
    - meson . _build -Dgtk_doc=true -Db_coverage=true --werror
    - ninja -C _build

build-debian-package:
  image: debian:buster
  <<: *tags
  stage: build
  script:
    - dpkg-buildpackage -uc -us
